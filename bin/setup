#!/bin/bash

# load variables
. .env

echo "starting container..."
bin/start
sleep 3 #Ensure containers are started...

bin/magento setup:install \
    --backend-frontname=admin \
    --db-host=mysql \
    --db-name=$DATABASE_NAME \
    --db-user=$DATABASE_USER \
    --db-password=$DATABASE_PASSWORD \
    --base-url=https://$VIRTUAL_HOST/ \
    --admin-firstname=$M2SETUP_ADMIN_FIRSTNAME \
    --admin-lastname=$M2SETUP_ADMIN_LASTNAME \
    --admin-email=$M2SETUP_ADMIN_EMAIL \
    --admin-user=$M2SETUP_ADMIN_USER \
    --admin-password=$M2SETUP_ADMIN_PASSWORD \
    --language=$M2SETUP_LANGUAGE \
    --currency=$M2SETUP_CURRENCY \
    --timezone=$M2SETUP_TIMEZONE \
    --cleanup-database \
    --use-rewrites=1

echo "Turning on developer mode.."
bin/magento deploy:mode:set developer

echo "Reindex all indexers"
bin/magento indexer:reindex

echo "Forcing deploy of static content to speed up initial requests..."
bin/magento setup:static-content:deploy -f 

echo "Enabling redis for cache..."
bin/magento setup:config:set --no-interaction --cache-backend=redis --cache-backend-redis-server=redis-cache --cache-backend-redis-db=0

echo "Enabling redis for full page cache..."
bin/magento setup:config:set --no-interaction --page-cache=redis --page-cache-redis-server=redis-fpc --page-cache-redis-db=1

echo "Enabling Redis for session..."
bin/magento setup:config:set --no-interaction --session-save=redis --session-save-redis-host=redis-session --session-save-redis-log-level=4 --session-save-redis-db=1

echo "Clearing the cache for good measure..."
bin/magento cache:flush

echo "Copying files from container to host after install..."
bin/pull --all

echo "Restarting containers with host bind mounts for dev..."
bin/restart

echo ""
echo "Docker development environment setup complete."
echo "You may now access your Magento instance at https://${VIRTUAL_HOST}/"
echo "You may now access your Admin Magento instance at https://${VIRTUAL_HOST}/admin"
echo  "Admin user: $M2SETUP_ADMIN_USER"
echo  "Admin pass: $M2SETUP_ADMIN_PASSWORD"